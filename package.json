{
  "name": "postcss-critical-css",
  "version": "3.0.3",
  "description": "Generate critical CSS using PostCSS",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/zgreen/postcss-critical-css"
  },
  "keywords": [
    "postcss-plugin",
    "postcss plugin",
    "postcss",
    "critical-css",
    "critical",
    "css",
    "critical css"
  ],
  "author": "Zach Green",
  "license": "MIT",
  "engines": {
    "node": ">=6.0.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.1.0",
    "@babel/core": "^7.1.0",
    "@babel/plugin-syntax-object-rest-spread": "^7.0.0",
    "@babel/preset-env": "^7.1.0",
    "@babel/preset-flow": "^7.0.0",
    "babel-eslint": "^9.0.0",
    "eslint": "^5.6.0",
    "eslint-config-standard": "^12.0.0",
    "eslint-plugin-flowtype": "^2.50.1",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-node": "^7.0.1",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-standard": "^4.0.0",
    "flow-bin": "^0.81.0",
    "minimist": "^1.2.0",
    "tape": "^4.8.0"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "example": "node ./example/example.js",
    "flow": "flow; test $? -eq 0 -o $? -eq 2",
    "eslint": "eslint test/**/*.js && eslint src/**",
    "start": "eslint src/** && npm run flow && babel src --out-dir lib --watch",
    "pretest": "node ./test/preTest.js",
    "test": "eslint src/** && npm run flow && npm run test-default && npm run test-no-preserve && npm run test-output-path && npm run test-output-dest && npm run test-no-args && npm run test-no-minify",
    "test-no-args": "npm run pretest -- --noArgs && tape test --noArgs --test=default",
    "test-no-minify": "npm run pretest -- --minify=false --fixtures-dir=fixtures-no-minify && tape test --fixtures-dir=fixtures-no-minify --test=default,this",
    "test-output-dest": "npm run pretest -- --outputDest='custom.css' --fixtures-dir=fixtures-output-dest && tape test --outputDest='custom.css' --fixtures-dir=fixtures-output-dest --test=default",
    "test-default": "npm run pretest && tape test",
    "test-no-preserve": "npm run pretest -- --fixtures-dir=fixtures-no-preserve --preserve=false && tape test --fixtures-dir=fixtures-no-preserve --preserve=false",
    "test-output-path": "npm run pretest -- --outputPath='test/fixtures-output-path' && tape test --outputPath='test/fixtures-output-path' --test=default"
  },
  "dependencies": {
    "chalk": "^1.1.3",
    "cssnano": "^4.0.0",
    "postcss": "^7.0.0"
  }
}
